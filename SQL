-- Create at least 3 tables
CREATE TABLE menus_pizza (
  pizzaid INT UNIQUE,
  pizzaname TEXT,
  price INT,
  point REAL
);

INSERT INTO menus_pizza VALUES
  (1, 'Margherita', 499, 7.5),
  (2, 'Pepperoni', 459, 8.0),
  (3, 'Hawaiian', 459, 7.0),
  (4, 'Seafood', 699, 8.5),
  (5, 'Vegetable', 499, 7.0),
  (6, 'Mexican', 599, 8.5),
  (7, 'Italian', 599, 9.0),
  (8, 'Pepper and ham', 559,8.5);

CREATE TABLE orders_pizza (
  ordersid INT UNIQUE,
  ordersdate DATE,
  customersid INT,
  pizzaid INT,
  payment TEXT
);

INSERT INTO orders_pizza VALUES
  (1, '2023-03-01', 1, 2, 'Cash'),
  (2, '2023-03-04', 3, 3, 'Mobile banking'),
  (3, '2023-03-05', 5, 4, 'Credit card'),
  (4, '2023-03-15', 8, 10, 'Cash'),
  (5, '2023-03-17', 7, 12, 'Mobile banking'),
  (6, '2023-03-19', 2, 1, 'Credit card'),
  (7, '2023-03-22', 4, 5, 'Credit card'),
  (8, '2023-03-26', 6, 6, 'Cash'),
  (9, '2023-03-25', 5, 8, 'Mobile banking'),
  (10, '2023-03-31', 4, 15, 'Mobile banking'),
  (11, '2023-04-02', 5, 13, 'Credit card'),
  (12, '2023-04-04', 1, 7, 'Mobile banking'),
  (13, '2023-04-06', 1, 9, 'Credit card'),
  (14, '2023-04-08', 2, 11, 'Mobile banking'),
  (15, '2023-04-09', 8, 14, 'Credit card'),
  (16, '2023-04-11', 8, 2, 'Cash'),
  (17, '2023-04-14', 6, 1, 'Credit card'),
  (18, '2023-04-16', 3, 12, 'Cash'),
  (19, '2023-04-17', 3, 11, 'Mobile banking'),
  (20, '2023-04-18', 4, 5, 'Mobile banking'),
  (21, '2023-04-19', 5, 8, 'Credit card'),
  (22, '2023-04-20', 6, 13, 'Mobile banking'),
  (23, '2023-04-22', 2, 9, 'Credit card'),
  (24, '2023-04-25', 1, 3, 'Mobile banking'),
  (25, '2023-04-28', 3, 6, 'Credit card'),
  (26, '2023-04-29', 4, 8, 'Credit card'),
  (27, '2023-05-05', 5, 6, 'Mobile banking'),
  (28, '2023-05-08', 6, 4, 'Mobile banking'),
  (29, '2023-05-16', 7, 1, 'Credit card'),
  (30, '2023-05-19', 8, 6, 'Cash'),
  (31, '2023-05-25', 9, 7, 'Credit card');
  

CREATE TABLE customers_infor (
  customersid INT UNIQUE,
  customersname TEXT,
  location TEXT
);

INSERT INTO customers_infor VALUES
  (1, 'Anna', 'Bangkok'),
  (2, 'Peter', 'Nonthaburi'),
  (3, 'Marry', 'Chonburi'),
  (4, 'Gunny', 'Bangkok'),
  (5, 'Janie', 'Nonthaburi'),
  (6, 'Bowvy', 'Nonthaburi'),
  (7, 'Mooping', 'Bangkok'),
  (8, 'Dream', 'Chonburi'),
  (9, 'Peepee', 'Bangkok'),
  (10, 'Goyyog', 'Samutprakan'),
  (11, 'Namhom', 'Nonthaburi'),
  (12, 'Natty', 'Bangkok'),
  (13, 'Ammy', 'Bangkok'),
  (14, 'Bosse', 'Samutprakan'),
  (15, 'Newwie', 'Chonburi');

-- SQL queries
-- Find top 3 pizzas that buy the most customers 
SELECT
  customersname,
  pizzaname,
  price,
  COUNT (*) AS orders_count
FROM orders_pizza AS ord
JOIN customers_infor AS cus ON ord.customersid = cus.customersid
JOIN menus_pizza AS menu ON ord.pizzaid = menu.pizzaid
GROUP BY 2
  ORDER BY orders_count DESC
LIMIT 3;

-- Find customers that buy pizzas that cost more than 1000 bath
SELECT
  customersname,
  pizzaname,
  price,
  COUNT (*) AS orders_count,
  price * COUNT (*) AS total_price
FROM orders_pizza AS ord
JOIN customers_infor AS cus ON ord.customersid = cus.customersid
JOIN menus_pizza AS menu ON ord.pizzaid = menu.pizzaid
GROUP BY 1
HAVING total_price > 1000
ORDER BY 5 DESC;

-- Find Nonthaburi customers payment method is Credit card in 04-2023
SELECT
  customersname,
  ordersdate,
  location,
  payment
FROM (
  SELECT * FROM orders_pizza
  WHERE payment = 'Credit card' 
  AND STRFTIME ('%Y-%m', ordersdate) = '2023-04'
     ) AS t1
JOIN (
  SELECT * FROM customers_infor
  WHERE location = 'Nonthaburi'
     ) AS t2
ON t1.customersid = t2.customersid;

-- Summarize total price and point for each customers
SELECT 
  customersname,
  pizzaname,
  price,
  point,
  COUNT (*) AS orders_count,
  SUM (price) AS total_price,
  ROUND(AVG (point),2) AS avg_point
FROM orders_pizza AS ord
JOIN customers_infor AS cus ON ord.customersid = cus.customersid
JOIN menus_pizza AS menu ON ord.pizzaid = menu.pizzaid
GROUP BY 2
HAVING  COUNT (*) > 1
ORDER BY avg_point DESC;
